/*
 * AjaxHandlerAction.java
 *
 * Created on June 11, 2008, 12:22 AM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package com.mss.ediscv.ajax;

 

import com.mss.ediscv.util.AppConstants;
import com.mss.ediscv.util.ServiceLocator;
import com.opensymphony.xwork2.ActionSupport;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts2.interceptor.ServletRequestAware;
import org.apache.struts2.interceptor.ServletResponseAware;





/**
 *
 * @author miracle
 */
public class AjaxHandlerAction extends ActionSupport implements ServletRequestAware,ServletResponseAware{
    
    /**
     * Creating a reference variable for HttpServletRequest.
     */
    private HttpServletRequest httpServletRequest;
    
    /**
     * Creating a reference variable for HttpServletResponse.
     */
    private HttpServletResponse httpServletResponse;
    
    private String responseString;
    private String poNumber;
    private String poInst;
    
    private String asnNumber;
    private String invNumber;
    
    private String isaNumber;
    
    private String poList;
    
    private String type;
    
    private String fileId;
    
    private String tpId;
    private String name;
    private String dept;
    private String commid;
    private String contact;
    private String phno;
    private String qualifier;
     private String refId;
     private String loadList;
     
    /** Creates a new instance of AjaxHandlerAction */
    public AjaxHandlerAction() {
    }
    
    
    public String getPoDetails() {
        if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                responseString = ServiceLocator.getAjaxHandlerService().getPoDetails(getPoNumber(),getPoInst()).toString();              
               // System.out.println("responseString--->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
    
    public String getAsnDetails() {
         if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                responseString = ServiceLocator.getAjaxHandlerService().getASNDetails(getAsnNumber(),getPoNumber()).toString();              
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
    
    public String getInvDetails() {
         if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                 responseString = ServiceLocator.getAjaxHandlerService().getInvDetails(getInvNumber(),getPoNumber()).toString();              
                // System.out.println("responseString----->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
    
    
    public String getDocDetails() {
         if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                //System.out.println("in actionnnnnn");
                 responseString = ServiceLocator.getAjaxHandlerService().getDocDetails(getIsaNumber(),getPoNumber()).toString();              
                 //System.out.println("responseString--->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
    public String getPaymentDetails() {
       if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                 responseString = ServiceLocator.getAjaxHandlerService().getPaymentDetails(getFileId()).toString();              
                 
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null; 
    }
    
    public String getDocCopy() {
         if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                
               // System.err.println("poList----->"+getPoList().toString());
                responseString = ServiceLocator.getAjaxHandlerService().getDocCopy(getPoList().toString(),getType().toString());              
                // System.out.println("responseString--->"+responseString);
                 httpServletResponse.setContentType("text/xml");
                 httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
    
      public String getLoadCopy() {
         if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                
               // System.err.println("poList----->"+getPoList().toString());
                responseString = ServiceLocator.getAjaxHandlerService().getLoadCopy(getLoadList().toString(),getType().toString());              
                // System.out.println("responseString--->"+responseString);
                 httpServletResponse.setContentType("text/xml");
                 httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
    
    /**
     * 
     *  Life cycle Calls
     */
        public String getLifecycleDetails() {
         if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                 responseString = ServiceLocator.getAjaxHandlerService().getLifeCycleDetails(getPoNumber(),getFileId(),getType()).toString();              
                // System.out.println("responseString in action--->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
    
    
        /** Tp Add and Update**/
        
         /**
         * Tp Details 
         * 
         */
         public String getTpDetails() {
        if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                responseString = ServiceLocator.getAjaxHandlerService().getTpDetails(getTpId()).toString();              
               // System.out.println("responseString--->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
         /*
          * 
          * To Update tp Details
          */
             public String updateTpDetails() {
        if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                responseString = ServiceLocator.getAjaxHandlerService().updateTpDetails(this).toString();              
               // System.out.println("responseString--->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
  

     //for getting TradingPartner Detail Information
          public String getTpDetailInformation() {
        if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                responseString = ServiceLocator.getAjaxHandlerService().getTpDetailInformation(getTpId(),httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_DEFAULT_FLOWID).toString()).toString();              
               // System.out.println("responseString--->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }  
          
      public String getLogisticsDocDetails() {
         if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                //System.out.println("in actionnnnnn");
                 responseString = ServiceLocator.getAjaxHandlerService().getLogisticsDocDetails(getIsaNumber(),getPoNumber()).toString();              
                // System.out.println("responseString--->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
      
 public String getLoadTenderingDetails() {
         if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                //System.out.println("in actionnnnnn");
                 responseString = ServiceLocator.getAjaxHandlerService().getLoadTenderingDetails(getIsaNumber(),getPoNumber()).toString();              
                // System.out.println("responseString--->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }
 public String getLtResponseDetails() {
         if(httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME) != null){
            try {
                //System.out.println("in actionnnnnn");
                responseString = ServiceLocator.getAjaxHandlerService().getLtResponseDetails(getFileId(), getRefId()).toString();              
                // System.out.println("responseString--->"+responseString);
                httpServletResponse.setContentType("text/xml");
                httpServletResponse.getWriter().write(responseString);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
        return null;
    }

    /**
     *
     * This method is used to set the Servlet Request
     * @param httpServletRequest
     */
    public void setServletRequest(HttpServletRequest httpServletRequest) {
        this.httpServletRequest = httpServletRequest;
    }
    
    /**
     *
     * This method is used to set the Servlet Response
     * @param httpServletResponse
     */
    public void setServletResponse(HttpServletResponse httpServletResponse) {
        this.httpServletResponse = httpServletResponse;
    }

    /**
     * @return the poNumber
     */
    public String getPoNumber() {
        return poNumber;
    }

    /**
     * @param poNumber the poNumber to set
     */
    public void setPoNumber(String poNumber) {
        this.poNumber = poNumber;
    }
 
    /**
     * @return the asnNumber
     */
    public String getAsnNumber() {
        return asnNumber;
    }

    /**
     * @param asnNumber the asnNumber to set
     */
    public void setAsnNumber(String asnNumber) {
        this.asnNumber = asnNumber;
    }

    /**
     * @return the invNumber
     */
    public String getInvNumber() {
        return invNumber;
    }

    /**
     * @param invNumber the invNumber to set
     */
    public void setInvNumber(String invNumber) {
        this.invNumber = invNumber;
    }

    /**
     * @return the isaNumber
     */
    public String getIsaNumber() {
        return isaNumber;
    }

    /**
     * @param isaNumber the isaNumber to set
     */
    public void setIsaNumber(String isaNumber) {
        this.isaNumber = isaNumber;
    }

    /**
     * @return the poList
     */
    public String getPoList() {
        return poList;
    }

    /**
     * @param poList the poList to set
     */
    public void setPoList(String poList) {
        this.poList = poList;
    }

    /**
     * @return the type
     */
    public String getType() {
        return type;
    }

    /**
     * @param type the type to set
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * @return the poInst
     */
    public String getPoInst() {
        return poInst;
    }

    /**
     * @param poInst the poInst to set
     */
    public void setPoInst(String poInst) {
        this.poInst = poInst;
    }

    /**
     * @return the fileId
     */
    public String getFileId() {
        return fileId;
    }

    /**
     * @param fileId the fileId to set
     */
    public void setFileId(String fileId) {
        this.fileId = fileId;
    }

    /**
     * @return the tpId
     */
    public String getTpId() {
        return tpId;
    }

    /**
     * @param tpId the tpId to set
     */
    public void setTpId(String tpId) {
        this.tpId = tpId;
    }

    /**
     * @return the name
     */
    public String getName() {
        return name;
    }

    /**
     * @param name the name to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @return the dept
     */
    public String getDept() {
        return dept;
    }

    /**
     * @param dept the dept to set
     */
    public void setDept(String dept) {
        this.dept = dept;
    }

    /**
     * @return the commid
     */
    public String getCommid() {
        return commid;
    }

    /**
     * @param commid the commid to set
     */
    public void setCommid(String commid) {
        this.commid = commid;
    }

    /**
     * @return the contact
     */
    public String getContact() {
        return contact;
    }

    /**
     * @param contact the contact to set
     */
    public void setContact(String contact) {
        this.contact = contact;
    }

    /**
     * @return the phno
     */
    public String getPhno() {
        return phno;
    }

    /**
     * @param phno the phno to set
     */
    public void setPhno(String phno) {
        this.phno = phno;
    }

    /**
     * @return the qualifier
     */
    public String getQualifier() {
        return qualifier;
    }

    /**
     * @param qualifier the qualifier to set
     */
    public void setQualifier(String qualifier) {
        this.qualifier = qualifier;
    }

    /**
     * @return the refId
     */
    public String getRefId() {
        return refId;
    }

    /**
     * @param refId the refId to set
     */
    public void setRefId(String refId) {
        this.refId = refId;
    }

    /**
     * @return the loadList
     */
    public String getLoadList() {
        return loadList;
    }

    /**
     * @param loadList the loadList to set
     */
    public void setLoadList(String loadList) {
        this.loadList = loadList;
    }
	

    
}

